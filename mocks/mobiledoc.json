{
  "version": "0.3.0",
  "atoms": [["soft-return", "", {}]],
  "cards": [
    [
      "code",
      {
        "code": "npx create-react-app forex-app\n\ncd forex-app\n\nyarn start\n",
        "language": "sh"
      }
    ],
    [
      "image",
      {
        "src": "https://res.cloudinary.com/time2hack/image/upload/q_auto:good,f_auto/forex-app-small.png",
        "cardWidth": ""
      }
    ],
    [
      "code",
      {
        "language": "json",
        "code": "{\n  \"amount\": 1,\n  \"base\": \"USD\",\n  \"date\": \"2020-05-08\",\n  \"rates\": {\n    \"AUD\": 1.5321,\n    \"BGN\": 1.8037,\n    \"BRL\": 5.817,\n    \"...\": ...\n  }\n}"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "import * as React from \"react\";\nimport \"./RateList.css\";\n\nconst Amount = ({ amount, rate }) => {\n  const _rate = Number(rate);\n  return (\n    <span className=\"rate\">\n      {(amount ? _rate * amount : _rate).toFixed(5)}\n    </span>\n  );\n};\n\nconst CurrencyFlag = ({ currency }) => (\n  <span className={`\n    currency-flag\n    currency-flag-${currency.toLowerCase()}\n  `}></span>\n);\n\nconst CSymbol = ({ currency }) => (\n  <span className=\"currency\">{currency.toUpperCase()}</span>\n);\n\nconst display = (currency, reverse) => [\n  <CurrencyFlag key={`flag-${currency}`} currency={currency} />,\n  <CSymbol key={`symbol-${currency}`} currency={currency} />,\n];\n\nconst Currency = ({ currency = \"usd\" }) => (\n  <div className=\"currency-box\">{display(currency)}</div>\n);\n\nexport const RateList = ({ rates = {}, amount, className }) => (\n  <div className={`rate-list-container ${className || ''}`}>\n    <div className=\"rate-list\">\n      <ul>\n        {Object.keys(rates).map((currency, index) => (\n          <li key={index}>\n            <Currency currency={currency} />\n            <Amount rate={rates[currency]} amount={amount} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "import * as React from \"react\";\nimport \"./CurrencySelector.css\";\nimport { CurrencyFlag } from \"../CurrencyFlag\";\n\nconst currencies = [\"EUR\", \"USD\", \"GBP\"];\n\nconst CurrencyFlag = ({ currency }) => (\n  <span className={`\n    currency-flag\n    currency-flag-${currency.toLowerCase()}\n  `}></span>\n);\n\nconst CurrencySelector = ({ currency = \"usd\", onChangeCurrency }) => (\n  <div className=\"currency-box\">\n    <select\n      className=\"currency-select\"\n      value={currency}\n      onChange={(e) => onChangeCurrency(e.target.value)}\n    >\n      {currencies.map((item, index) => (\n        <option key={index} >{item}</option>\n      ))}\n    </select>\n    <CurrencyFlag key={`flag-${currency}`} currency={currency} />\n  </div>\n);\n\nexport const SearchBar = ({\n  currency = \"usd\",\n  amount = 1,\n  onChangeAmount = () => {},\n  onChangeCurrency = () => {},\n}) => (\n  <div className=\"search-bar-container\">\n    <div className=\"search-bar\">\n      <input\n        type=\"text\"\n        defaultValue={amount}\n        onChange={(e) => onChangeAmount(e.target.value)}\n        placeholder=\"Amount\"\n      />\n      <CurrencySelector\n        currency={currency}\n        onChangeCurrency={onChangeCurrency}\n      />\n    </div>\n  </div>\n);"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "import React, { useState } from \"react\";\nimport { SearchBar } from \"../SearchBar/SearchBar\";\nimport { RateList } from \"../RateList/RateList\";\n\nconst rates = {\n  \"AUD\": 1.5321,\n  \"BGN\": 1.8037,\n  \"BRL\": 5.817\n}\n\nfunction App() {\n  const [state, setState] = useState({\n    rates,\n    amount: 1,\n    currency: \"USD\",\n  });\n\n  const { amount, currency, rates } = state;\n  \n  const updateAmount = (amount) =>\n    setState((currentState) => ({\n      ...currentState,\n      amount: Number(amount),\n    }));\n\n  const updateCurrency = (currency) =>\n    setState((currentState) => ({\n      ...currentState,\n      currency,\n    }));\n\n  return (\n    <div className=\"app\" data-testid=\"app-container\">\n      <main className=\"contents\">\n        <SearchBar\n          amount={amount}\n          currency={currency}\n          onChangeAmount={updateAmount}\n          onChangeCurrency={updateCurrency}\n        />\n        <RateList className=\"rates\" rates={rates} amount={amount} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"
      }
    ],
    [
      "code",
      {
        "language": "js",
        "code": "const baseUrl = \"//api.frankfurter.app\";\n\nconst request = (_url, method = \"GET\", body = \"\") => {\n  const url = `${baseUrl}${_url}`;\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const params = {\n    method,\n    headers: headers,\n  };\n  if ([\"POST\", \"PUT\"].includes(method)) {\n    params.body = typeof body !== \"string\" ? JSON.stringify(body) : body;\n  }\n  const request = new Request(url, params);\n\n  return fetch(request).then((response) => {\n    const { status, headers } = response;\n    if (status === 204 || headers.get(\"Content-Length\") === 0) {\n      return {};\n    }\n    return response.json();\n  });\n};\n\nexport const getData = (url) => request(url, \"GET\");\nexport const postData = (url, data) => request(url, \"POST\", data);\nexport const putData = (url, data) => request(url, \"PUT\", data);\nexport const deleteData = (url) => request(url, \"DELETE\");\n\nexport default {\n  get: getData,\n  post: postData,\n  put: putData,\n  delete: deleteData,\n};"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "const getRates = (currency) => getData(\n  `/latest?from=${currency}`\n).then(({ rates }) =>\n  setState((currentState) => ({\n    ...currentState,\n    rates,\n  }))\n);"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "useEffect(() => {\n  getRates(state.currency);\n}, []);"
      }
    ],
    [
      "code",
      {
        "language": "js",
        "code": "const App = () => {\n  const [state, setState] = useState({\n    rates: {},\n    amount: 1,\n    currency: \"USD\",\n  });\n  ...\n  useEffect(() => {\n    getRates(state.currency);\n  }, [state.currency]);\n  ...\n  return (...);\n}"
      }
    ],
    [
      "code",
      {
        "language": "jsx",
        "code": "const App = () => {\n  const [state, setState] = useState({\n    rates: {},\n    amount: 1,\n    currency: \"USD\",\n  });\n  ...\n  \n  const getRates = (currency, amount = 1) => getData(\n    `/latest?from=${currency}&amount=${amount}`\n  ).then(({ rates }) =>\n    setState((currentState) => ({\n      ...currentState,\n      rates,\n    }))\n  );\n  useEffect(() => {\n    getRates(state.currency, state.amount);\n  }, [state.currency, state.amount]);\n\n  ...\n  return (...);\n}"
      }
    ],
    [
      "html",
      {
        "html": "<center>\n  <a class=\"gh-btn gh-btn-black\" href=\"https://github.com/pankajpatel/forex-app/\">\n    <span>Github Repo</span>\n  </a>\n  <a class=\"gh-btn gh-btn-black\" href=\"https://pankaj.pro/forex-app/\">\n    <span>Demo</span>\n  </a>\n</center>"
      }
    ],
    ["hr", {}],
    ["hr", {}]
  ],
  "markups": [
    ["a", ["href", "https://www.frankfurter.app/"]],
    [
      "a",
      ["href", "https://github.com/public-apis/public-apis#currency-exchange"]
    ],
    ["code"],
    ["a", ["href", "https://github.com/facebook/create-react-app"]],
    [
      "a",
      [
        "href",
        "https://dribbble.com/shots/8780358-Foreign-Currency-Rates-and-Converter-Mobile-App"
      ]
    ],
    ["a", ["href", "https://twitter.com/patel_pankaj_"]],
    ["a", ["href", "https://twitter.com/time2hack"]],
    [
      "a",
      [
        "href",
        "https://unsplash.com/@flowforfrank?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"
      ]
    ],
    [
      "a",
      [
        "href",
        "https://unsplash.com/s/photos/react?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"
      ]
    ],
    ["a", ["href", "https://icons8.com/lunacy"]]
  ],
  "sections": [
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "Integrating API in a React Project can be easily done by achieving simple project structure. Let’s see how to integrate an API in a React Project."
        ]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "We will be building an App to List Current Rates and Currency Convertor using Frankfurter API "
        ],
        [0, [0], 1, "https://www.frankfurter.app/"],
        [0, [], 0, "."]
      ]
    ],
    [
      1,
      "p",
      [
        [0, [], 0, "You can use any API, I found this one listed "],
        [
          0,
          [1],
          1,
          "over here: GitHub - public-apis/public-apis: A collective list of free APIs for use"
        ]
      ]
    ],
    [
      1,
      "p",
      [
        [0, [], 0, "Let’s get started by setting up a project with "],
        [0, [2, 3], 2, "create-react-app"],
        [0, [], 0, "."]
      ]
    ],
    [10, 0],
    [
      1,
      "p",
      [
        [0, [], 0, "This will initialize a new React App named "],
        [0, [2], 1, "forex-app"],
        [0, [], 0, ", start the local development server on port "],
        [0, [2], 1, "3000"],
        [0, [], 0, " and open the URL "],
        [0, [2], 1, "http://localhost:3000"],
        [0, [], 0, " on the default Browser."]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "We will use following design for our UI: (many parts of it)"
        ],
        [1, [], 0, 0],
        [
          0,
          [4],
          1,
          "Foreign Currency Rates and Convertor Mobile App by Tim on Dribbble"
        ]
      ]
    ],
    [10, 1],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "The design proposes the use of Country Flags for currency symbols"
        ]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "As we can see in above design, there is a list of rates for the preferred currency. We will make this screen working in our design. Let’s add the screen to list the currency exchange rates for a base currency."
        ]
      ]
    ],
    [
      1,
      "p",
      [[0, [], 0, "The API response structure for the Rates is as follows: "]]
    ],
    [10, 2],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "For above response, following React Component will display the rates:"
        ]
      ]
    ],
    [10, 3],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "And apart from the list, we will need the component to select our preferred currency and set a base amount to convert. Following component will be responsible for that:"
        ]
      ]
    ],
    [10, 4],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "Lets try to assemble the above components with some mock data:"
        ]
      ]
    ],
    [10, 5],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "Now to fetch the rates from API we will use fetch and following will be our function to handle all the GET requests:"
        ]
      ]
    ],
    [10, 6],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "With all the necessary pieces in place, we will integrate the API call with "
        ],
        [0, [2], 1, "getData"],
        [0, [], 0, " function in the "],
        [0, [2], 1, "App"],
        [
          0,
          [],
          0,
          " Component with the following function and it will be chained to update the state in the Component:"
        ]
      ]
    ],
    [10, 7],
    [
      1,
      "p",
      [
        [0, [], 0, "And we will use the React's "],
        [0, [2], 1, "useEffect"],
        [0, [], 0, " hook to execute the initial fetch call:"]
      ]
    ],
    [10, 8],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "This will call the API for Rates with fetch on the first call. But we want to fetch rates for any change in the Currency. "
        ]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "As we are already updating the state in the Change Handler of "
        ],
        [0, [2], 1, "select"],
        [
          0,
          [],
          0,
          ", we just need to make it; currency from state; a dependency of "
        ],
        [0, [2], 1, "useEffect"],
        [0, [], 0, "."]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "In this way, any changes to the dependency will trigger re-execution of the "
        ],
        [0, [2], 1, "useEffect"],
        [0, [], 0, " hook. The following code will do that:"]
      ]
    ],
    [10, 9],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "Now, if we want to make sure of newest rates for conversion of amount as well, we will need the following changes to the "
        ],
        [0, [2], 1, "getRates"],
        [0, [], 0, " function and "],
        [0, [2], 1, "useEffect"],
        [
          0,
          [],
          0,
          " hook alonf with the change handlers to update the amount in state:"
        ]
      ]
    ],
    [10, 10],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "You can play with the Code and demo at the following links:"
        ]
      ]
    ],
    [10, 11],
    [10, 12],
    [1, "h2", [[0, [], 0, "Conclusion"]]],
    [1, "p", [[0, [], 0, "Here we saw the following things:"]]],
    [
      3,
      "ul",
      [
        [[0, [], 0, "Starting React app with create-react-app"]],
        [
          [0, [], 0, "Using Hooks to maintain state with "],
          [0, [2], 1, "useState"]
        ],
        [
          [0, [], 0, "Using "],
          [0, [2], 1, "fetch"],
          [0, [], 0, " in React Project"]
        ],
        [
          [0, [2], 1, "useEffect"],
          [0, [], 0, " for reacting to state changes and make API requests "]
        ]
      ]
    ],
    [1, "p", [[0, [], 0, "How do you call APIs in your React project?"]]],
    [
      1,
      "p",
      [
        [0, [], 0, "Let me know through comments 💬 or on Twitter at  "],
        [0, [5], 1, "@patelpankaj"],
        [0, [], 0, "  and  "],
        [0, [6], 1, "@time2hack"]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "If you find this article helpful, please share it with others 🗣"
        ]
      ]
    ],
    [
      1,
      "p",
      [
        [
          0,
          [],
          0,
          "Subscribe to the blog to receive new posts right to your inbox."
        ]
      ]
    ],
    [10, 13],
    [1, "h2", [[0, [], 0, "Credits"]]],
    [
      3,
      "ul",
      [
        [
          [0, [], 0, "Photo by "],
          [0, [7], 1, "Ferenc Almasi"],
          [0, [], 0, " on "],
          [0, [8], 1, "Unsplash"]
        ],
        [[0, [], 0, "Icons from Icon8 via "], [0, [9], 1, "Lunacy"]]
      ]
    ]
  ]
}
